version: '3.7'
services:
    nginx:
        build: nginx
        container_name: travel-nginx
        volumes:
            - ../code:/var/www/html/code
            - ./nginx/site.conf:/etc/nginx/conf.d/site.conf
        ports:
            - ${NGINX_HTTP_PORT}:80
            - ${NGINX_HTTPS_PORT}:443
        expose:
            - "${NGINX_HTTP_PORT}"
            - "${NGINX_HTTPS_PORT}"
        links:
            - php
        networks:
            - travel
    php:
        build: php
        container_name: travel-php
        volumes:
            - ../code:/var/www/html/code
            - ./php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
            - ./php/php.ini:/usr/local/etc/php/php.ini:ro
        links:
            - postgres
        networks:
            - travel
    redis:
        image: redis
        container_name: travel-redis
        command: [ "redis-server", "--appendonly", "yes", "--requirepass", '${REDIS_PASSWORD}' ]
        ports:
            - ${REDIS_PORT}:6379
        networks:
            - travel
        volumes:
            - ./data/redis:/data
    rabbit:
        image: rabbitmq:${RABBITMQ_IMAGE}
        container_name: travel-rabbit
        environment:
            RABBITMQ_ERLANG_COOKIE: "${RABBITMQ_ERLANG_COOKIE}"
            RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
            RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
            RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_DEFAULT_VHOST}"
        volumes:
            - ./rabbit/enabled_plugins:/etc/rabbitmq/enabled_plugins"
        networks:
            - travel
    postgres:
        image: postgres:${POSTGRES_VERSION}-alpine
        container_name: travel-postgres
        restart: always
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
        ports:
            - ${POSTGRES_PORT}:5432
        volumes:
            - ./data/postgres:/docker-entrypoint-initdb.d
            - ./data/postgres:/var/lib/postgresql/data:rw
        networks:
            - travel
    adminer:
        image: adminer
        container_name: travel-adminer
        restart: always
        links:
            - postgres
        ports:
            - ${ADMINER_PORT}:8080
networks:
    travel:
        external: true
